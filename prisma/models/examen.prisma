enum TipoExamen {
    Sync
    Async
}

model Examen {
    id          String  @id @default(uuid())
    title       String
    description String?
    img         String?
    video       String?
    audio       String?
    peso        Int     @default(1) @db.TinyInt

    user_id Int
    user    User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    curso_id String
    curso    Curso  @relation(fields: [curso_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    inicio_examen DateTime?
    final_examen  DateTime?

    tipo_examen TipoExamen @default(Async)

    rubrica_holistica_id String?
    rubrica_holistica    RubricaHolistica? @relation(fields: [rubrica_holistica_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    rubrica_analitica_id String?
    rubrica_analitica    RubricaAnalitica? @relation(fields: [rubrica_analitica_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    state_id Int
    state    State @relation(fields: [state_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    preguntas   Pregunta[]
    historial   Historial[]
    ejecuciones EjecucionExamen[]

    created_at DateTime  @default(now())
    updated_at DateTime  @updatedAt
    deleted_at DateTime?
}

model Pregunta {
    id          String   @id @default(uuid())
    title       String
    description String?
    img         String?
    video       String?
    audio       String?
    puntos      Int      @default(1) @db.TinyInt
    duracion    Decimal? @db.Decimal(6, 2)
    examen_id   String

    indicadores              Indicadores[]
    examen                   Examen                     @relation(fields: [examen_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    respuestas               Respuesta[]
    preguntasEjecucionExamen PreguntasEjecucionExamen[]
}

model Respuesta {
    id        String  @id @default(uuid())
    respuesta String
    img       String?
    video     String?
    audio     String?
    correcta  Boolean @default(false)

    pregunta_id               String
    pregunta                  Pregunta                   @relation(fields: [pregunta_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    respuestasEjecucionExamen PreguntasEjecucionExamen[]
}
