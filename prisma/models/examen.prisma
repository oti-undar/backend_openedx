model Examen {
    id          String  @id @default(uuid())
    title       String
    description String?
    img         String?
    video       String?
    audio       String?
    peso        Int     @default(1) @db.TinyInt

    user_id String

    inicio_examen DateTime?
    final_examen  DateTime?

    state_id    Int
    state       State             @relation(fields: [state_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    preguntas   Pregunta[]
    historial   Historial[]
    ejecuciones EjecucionExamen[]

    created_at DateTime  @default(now())
    updated_at DateTime  @updatedAt
    deleted_at DateTime?
}

model Pregunta {
    id                        Int                         @id @default(autoincrement())
    title                     String
    description               String?
    img                       String?
    video                     String?
    audio                     String?
    puntos                    Int                         @default(1) @db.TinyInt
    duracion                  Decimal                     @db.Decimal(6, 2)
    inicio_pregunta           DateTime?
    examen_id                 String
    examen                    Examen                      @relation(fields: [examen_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    respuestas                Respuesta[]
    respuestasEjecucionExamen RespuestasEjecucionExamen[]
}

model Respuesta {
    id        Int     @id @default(autoincrement())
    respuesta String
    img       String?
    video     String?
    audio     String?
    correcta  Boolean @default(false)

    pregunta_id               Int
    pregunta                  Pregunta                    @relation(fields: [pregunta_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    respuestasEjecucionExamen RespuestasEjecucionExamen[]
}
